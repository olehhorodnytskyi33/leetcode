class Solution {
public:
    int search(vector<int>& nums, int target) {
        
        int n = nums.size();
        int l = 0;
        int r = n - 1;
        int m = 0;
        
        if (n == 0)
            return -1;
        
        while(l < r - 1)
        {
            m = (l+r) / 2;
            
            if ((nums[l] < nums[m]) and ((target >= nums[l]) and (target <= nums[m])))
                r = m;
            else if ((nums[m] < nums[r]) and ((target >= nums[m]) and (target <= nums[r])))
                l = m;
            else if (nums[l] < nums[m])
                l = m;
            else if (nums[m] < nums[r])
                r = m;
            
        }
        
        if (l >=0 and l < n and nums[l] == target)
            return l;
        else if((l+1) >= 0 and (l+1) < n and nums[l+1] == target)
            return l+1;
        else if(r >= 0 and r < n and nums[r] == target)
            return r;
        
        return -1;
    }
};
