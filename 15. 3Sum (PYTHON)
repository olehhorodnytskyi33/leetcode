class Solution(object):
    def threeSum(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        
        nums = sorted(nums)
        ans = set()
        n = len(nums)
        
        counter = {}
        nums_new = []
        
        for num in nums:
            
            if num not in counter.keys():
                counter[num] = 1
            else:
                counter[num] += 1
            
            if num == 0 and counter[num] > 3:
                continue
            elif num != 0 and counter[num] > 2:
                continue
                
            nums_new.append(num)
            
        nums_new = sorted(nums_new)
        n = len(nums_new)
        
        print(nums_new)
        
        for i in range(n):
            
            first = i + 1
            second = n - 1
            
            while first < second:
                
                cur_sum = nums_new[i] + nums_new[first] + nums_new[second]
                
                if cur_sum > 0:
                    second -= 1
                elif cur_sum < 0:
                    first += 1
                else:
                    ans.add(tuple(sorted([nums_new[i], nums_new[first], nums_new[second]])))
                    first += 1
                    
        return ans
