from string import ascii_lowercase
import numpy as np

class Solution(object):
    
    def __init__(self):
        
        self.dPal = set()
        self.cur_min = np.inf
        self.s = ""
        self.dPal.add("")
        
        
    def minCut(self, s):
        
        self.s = s
        n = len(s)
        
        if n == 1:
            
            return 0
        
        for i in range(n):
            
            self.dPal.add(s[i])
            
            for j in range(1, n):
                
                if (i - j) >= 0 and (i + j) < n:
                    
                    if s[i-j] == s[i+j] and s[(i-j+1):(i+j)] in self.dPal:
                        
                        self.dPal.add(s[i-j:(i+j+1)])
                        
            for j in range(1, n):
                
                if (i - j + 1) >= 0 and (i + j) < n: 
                    
                    if s[i-j + 1] == s[i+j] and s[(i-j+2):(i+j)] in self.dPal:
                        
                        self.dPal.add(s[i-j+1:(i+j+1)])
                  
        
        DP = [np.inf] * (n)
        
        DP[0] = 0
        
        for i in range(1, n):
            
            DP[i] = DP[i-1] + 1
            
            for j in range(i):
                
                if s[j] == s[i] and s[(j+1):i] in self.dPal:
                    
                    if j > 0:
                        DP[i] = min(1 + DP[j-1], DP[i])
                    else:
                        DP[i] = 0
                    
                    
        
        return DP[n-1]
