/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        
        int residual = 0;
        ListNode* l3 = new ListNode(0);
        ListNode* l4 = l3;
        int t = 0;
        
        while((l1 != nullptr) || (l2 != nullptr) || (residual != 0))
        {
            
            if(t > 0)
                l3 = l3->next;
            
            int curr = (l1 != nullptr ? l1->val : 0) + (l2 != nullptr ? l2->val : 0) + residual;
            l3->val = curr % 10;
            residual = curr / 10;
            l1 = (l1 != nullptr ? l1->next : l1);
            l2 = (l2 != nullptr ? l2->next : l2);
            l3->next = new ListNode(0);
            t++;
        }
        
        l3->next = nullptr;
        return l4;
    }
};
